{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var c=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var r=e=>s(e,\"__esModule\",{value:!0});var p=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),g=(e,a)=>{r(e);for(var i in a)s(e,i,{get:a[i],enumerable:!0})},f=(e,a,i)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let n of c(a))!m.call(e,n)&&n!==\"default\"&&s(e,n,{get:()=>a[n],enumerable:!(i=h(a,n))||i.enumerable});return e},y=e=>f(r(s(e!=null?d(u(e)):{},\"default\",e&&e.__esModule&&\"default\"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var o=p((v,l)=>{l.exports=_jsx_runtime});var k={};g(k,{default:()=>x,frontmatter:()=>w});var t=y(o()),w={title:`Is False == 0 and True == 1 an implementation detail or is it guaranteed by the language?\n`,date:new Date(15760224e5),draft:!1,tags:[\"stackoverflow\",\"python\"],summary:`Is it guaranteed that False == 0 and True == 1, in Python (assuming that they are not reassigned by the user)?  For instance, is it in any way guaranteed that the following code will always produce...\n`};function b(e={}){let{wrapper:a}=e.components||{};return a?(0,t.jsx)(a,Object.assign({},e,{children:(0,t.jsx)(i,{})})):i();function i(){let n=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",ul:\"ul\",li:\"li\"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:\"content\",children:[(0,t.jsx)(n.a,{href:\"#content\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,t.jsx)(n.span,{className:\"icon icon-link\"})}),\"Content\"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:\"https://stackoverflow.com/questions/2764017/is-false-0-and-true-1-an-implementation-detail-or-is-it-guaranteed-by-the\",children:\"https://stackoverflow.com/questions/2764017/is-false-0-and-true-1-an-implementation-detail-or-is-it-guaranteed-by-the\"})}),(0,t.jsxs)(n.h2,{id:\"link-preview\",children:[(0,t.jsx)(n.a,{href:\"#link-preview\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,t.jsx)(n.span,{className:\"icon icon-link\"})}),\"Link Preview\"]}),(0,t.jsxs)(n.ul,{children:[(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:\"https://stackoverflow.com/questions/2764017/is-false-0-and-true-1-an-implementation-detail-or-is-it-guaranteed-by-the\",children:\"https://stackoverflow.com/questions/2764017/is-false-0-and-true-1-an-implementation-detail-or-is-it-guaranteed-by-the\"})}),(0,t.jsx)(n.li,{children:\"Is False == 0 and True == 1 an implementation detail or is it guaranteed by the language?\"}),(0,t.jsx)(n.li,{children:\"Is it guaranteed that False == 0 and True == 1, in Python (assuming that they are not reassigned by the user)? For instance, is it in any way guaranteed that the following code will always produce...\"})]})]})}}var x=b;return k;})();\n;return Component;","toc":[{"value":"Content","url":"#content","depth":2},{"value":"Link Preview","url":"#link-preview","depth":2}],"frontMatter":{"readingTime":{"text":"1 min read","minutes":0.71,"time":42600,"words":142},"slug":"2019-12-11-229","fileName":"2019-12-11-229.mdx","title":"Is False == 0 and True == 1 an implementation detail or is it guaranteed by the language?\n","date":"2019-12-11T00:00:00.000Z","draft":false,"tags":["stackoverflow","python"],"summary":"Is it guaranteed that False == 0 and True == 1, in Python (assuming that they are not reassigned by the user)?  For instance, is it in any way guaranteed that the following code will always produce...\n"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.36,"time":21600,"words":72},"slug":["default"],"fileName":"default.md","name":"Hao Chen","avatar":"/static/images/avatar.jpg","occupation":"MegaEase Inc. Founder","company":"MegaEase Inc.","email":"haoel@hotmail.com","twitter":"https://twitter.com/haoel","linkedin":"https://www.linkedin.com/in/haoel","github":"https://github.com/haoel","date":null}],"prev":{"title":"wrk: Modern HTTP benchmarking tool\n","date":"2019-12-11T00:00:00.000Z","draft":false,"tags":["github","http","tool"],"summary":"wrk - a HTTP benchmarking tool wrk is a modern HTTP benchmarking tool capable of generating significant load when run on a single multi-core CPU. It combines a multithreaded design with scalable event...\n","slug":"2019-12-11-230"},"next":{"title":"有本书叫《把你的英语用起来》，这个题目讲得很有道理\n","date":"2019-12-11T00:00:00.000Z","draft":false,"tags":["tips"],"summary":"有本书叫《把你的英语用起来》，这个题目讲得很有道理\n","slug":"2019-12-11-228"}},"__N_SSG":true}