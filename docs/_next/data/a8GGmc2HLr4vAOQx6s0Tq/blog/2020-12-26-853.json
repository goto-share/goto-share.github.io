{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var a=Object.create;var r=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var o=e=>r(e,\"__esModule\",{value:!0});var f=(e,l)=>()=>(l||e((l={exports:{}}).exports,l),l.exports),u=(e,l)=>{o(e);for(var i in l)r(e,i,{get:l[i],enumerable:!0})},x=(e,l,i)=>{if(l&&typeof l==\"object\"||typeof l==\"function\")for(let t of d(l))!m.call(e,t)&&t!==\"default\"&&r(e,t,{get:()=>l[t],enumerable:!(i=h(l,t))||i.enumerable});return e},I=e=>x(o(r(e!=null?a(p(e)):{},\"default\",e&&e.__esModule&&\"default\"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var s=f((w,c)=>{c.exports=_jsx_runtime});var j={};u(j,{default:()=>g,frontmatter:()=>C});var n=I(s()),C={title:`Go\\u7F16\\u7A0B\\u6A21\\u5F0F\\uFF1A\\u59D4\\u6258\\u548C\\u53CD\\u8F6C\\u63A7\\u5236\n`,date:new Date(16089408e5),draft:!1,tags:[\"coolshell\",\"golang\"],summary:`\\u53CD\\u8F6C\\u63A7\\u5236 IoC \\u2013 Inversion of Control  \\u662F\\u4E00\\u79CD\\u8F6F\\u4EF6\\u8BBE\\u8BA1\\u7684\\u65B9\\u6CD5\\uFF0C\\u5176\\u4E3B\\u8981\\u7684\\u601D\\u60F3\\u662F\\u628A\\u63A7\\u5236\\u903B\\u8F91\\u4E0E\\u4E1A\\u52A1\\u903B\\u8F91\\u5206\\u4EAB\\uFF0C\\u4E0D\\u8981\\u5728\\u4E1A\\u52A1\\u903B\\u8F91\\u91CC\\u5199\\u63A7\\u5236\\u903B\\u8F91\\uFF0C\\u8FD9\\u6837\\u4F1A\\u8BA9\\u63A7\\u5236\\u903B\\u8F91\\u4F9D\\u8D56\\u4E8E\\u4E1A\\u52A1\\u903B\\u8F91\\uFF0C\\u800C\\u662F\\u53CD\\u8FC7\\u6765\\uFF0C\\u8BA9\\u4E1A\\u52A1\\u903B\\u8F91\\u4F9D\\u8D56\\u63A7\\u5236\\u903B\\u8F91\\u3002\\u5728\\u300A[IoC/DIP\\u5176\\u5B9E\\u662F\\u4E00\\u79CD\\u7BA1\\u7406\\u601D\\u60F3](https://coolshell.cn/articles/9949.html)\\u300B\\u4E2D\\u7684\\u90A3\\u4E2A\\u5F00\\u5173\\u548C\\u7535\\u706F\\u7684\\u793A\\u4F8B\\u4E00\\u6837\\uFF0C\\u5F00\\u5173\\u662F\\u63A7\\u5236\\u903B\\u8F91\\uFF0C\\u7535\\u5668\\u662F\\u4E1A\\u52A1\\u903B\\u8F91\\uFF0C\\u4E0D\\u8981\\u5728\\u7535\\u5668\\u4E2D\\u5B9E\\u73B0\\u5F00\\u5173\\uFF0C\\u800C\\u662F\\u628A\\u5F00\\u5173\\u62BD\\u8C61\\u6210\\u4E00\\u79CD\\u534F\\u8BAE\\uFF0C\\u8BA9\\u7535\\u5668\\u90FD\\u4F9D\\u8D56\\u4E4B\\u3002\\u8FD9\\u6837\\u7684\\u7F16\\u7A0B\\u65B9\\u5F0F\\u53EF\\u4EE5\\u6709\\u6548\\u7684\\u964D\\u4F4E\\u7A0B\\u5E8F\\u590D\\u6742\\u5EA6\\uFF0C\\u5E76\\u63D0\\u5347\\u4EE3\\u7801\\u91CD\\u7528\\u3002\n`};function _(e={}){let{wrapper:l}=e.components||{};return l?(0,n.jsx)(l,Object.assign({},e,{children:(0,n.jsx)(i,{})})):i();function i(){let t=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",ul:\"ul\",li:\"li\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h2,{id:\"content\",children:[(0,n.jsx)(t.a,{href:\"#content\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(t.span,{className:\"icon icon-link\"})}),\"Content\"]}),(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:\"https://coolshell.cn/articles/21214.html\",children:\"https://coolshell.cn/articles/21214.html\"})}),(0,n.jsxs)(t.h2,{id:\"link-preview\",children:[(0,n.jsx)(t.a,{href:\"#link-preview\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(t.span,{className:\"icon icon-link\"})}),\"Link Preview\"]}),(0,n.jsxs)(t.ul,{children:[(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:\"https://coolshell.cn/articles/21214.html\",children:\"https://coolshell.cn/articles/21214.html\"})}),(0,n.jsx)(t.li,{children:\"Go\\u7F16\\u7A0B\\u6A21\\u5F0F\\uFF1A\\u59D4\\u6258\\u548C\\u53CD\\u8F6C\\u63A7\\u5236 | \\u9177 \\u58F3 - CoolShell\"}),(0,n.jsxs)(t.li,{children:[\"\\u53CD\\u8F6C\\u63A7\\u5236\",(0,n.jsx)(t.a,{href:\"https://en.wikipedia.org/wiki/Inversion_of_control\",children:\"IoC \\u2013 Inversion of Control\"}),\" \\u662F\\u4E00\\u79CD\\u8F6F\\u4EF6\\u8BBE\\u8BA1\\u7684\\u65B9\\u6CD5\\uFF0C\\u5176\\u4E3B\\u8981\\u7684\\u601D\\u60F3\\u662F\\u628A\\u63A7\\u5236\\u903B\\u8F91\\u4E0E\\u4E1A\\u52A1\\u903B\\u8F91\\u5206\\u4EAB\\uFF0C\\u4E0D\\u8981\\u5728\\u4E1A\\u52A1\\u903B\\u8F91\\u91CC\\u5199\\u63A7\\u5236\\u903B\\u8F91\\uFF0C\\u8FD9\\u6837\\u4F1A\\u8BA9\\u63A7\\u5236\\u903B\\u8F91\\u4F9D\\u8D56\\u4E8E\\u4E1A\\u52A1\\u903B\\u8F91\\uFF0C\\u800C\\u662F\\u53CD\\u8FC7\\u6765\\uFF0C\\u8BA9\\u4E1A\\u52A1\\u903B\\u8F91\\u4F9D\\u8D56\\u63A7\\u5236\\u903B\\u8F91\\u3002\\u5728\\u300A\",(0,n.jsx)(t.a,{href:\"https://coolshell.cn/articles/9949.html\",children:\"IoC/DIP\\u5176\\u5B9E\\u662F\\u4E00\\u79CD\\u7BA1\\u7406\\u601D\\u60F3\"}),\"\\u300B\\u4E2D\\u7684\\u90A3\\u4E2A\\u5F00\\u5173\\u548C\\u7535\\u706F\\u7684\\u793A\\u4F8B\\u4E00\\u6837\\uFF0C\\u5F00\\u5173\\u662F\\u63A7\\u5236\\u903B\\u8F91\\uFF0C\\u7535\\u5668\\u662F\\u4E1A\\u52A1\\u903B\\u8F91\\uFF0C\\u4E0D\\u8981\\u5728\\u7535\\u5668\\u4E2D\\u5B9E\\u73B0\\u5F00\\u5173\\uFF0C\\u800C\\u662F\\u628A\\u5F00\\u5173\\u62BD\\u8C61\\u6210\\u4E00\\u79CD\\u534F\\u8BAE\\uFF0C\\u8BA9\\u7535\\u5668\\u90FD\\u4F9D\\u8D56\\u4E4B\\u3002\\u8FD9\\u6837\\u7684\\u7F16\\u7A0B\\u65B9\\u5F0F\\u53EF\\u4EE5\\u6709\\u6548\\u7684\\u964D\\u4F4E\\u7A0B\\u5E8F\\u590D\\u6742\\u5EA6\\uFF0C\\u5E76\\u63D0\\u5347\\u4EE3\\u7801\\u91CD\\u7528\\u3002\"]})]})]})}}var g=_;return j;})();\n;return Component;","toc":[{"value":"Content","url":"#content","depth":2},{"value":"Link Preview","url":"#link-preview","depth":2}],"frontMatter":{"readingTime":{"text":"1 min read","minutes":0.26,"time":15600,"words":52},"slug":"2020-12-26-853","fileName":"2020-12-26-853.mdx","title":"Go编程模式：委托和反转控制\n","date":"2020-12-26T00:00:00.000Z","draft":false,"tags":["coolshell","golang"],"summary":"反转控制 IoC – Inversion of Control  是一种软件设计的方法，其主要的思想是把控制逻辑与业务逻辑分享，不要在业务逻辑里写控制逻辑，这样会让控制逻辑依赖于业务逻辑，而是反过来，让业务逻辑依赖控制逻辑。在《[IoC/DIP其实是一种管理思想](https://coolshell.cn/articles/9949.html)》中的那个开关和电灯的示例一样，开关是控制逻辑，电器是业务逻辑，不要在电器中实现开关，而是把开关抽象成一种协议，让电器都依赖之。这样的编程方式可以有效的降低程序复杂度，并提升代码重用。\n"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.36,"time":21600,"words":72},"slug":["default"],"fileName":"default.md","name":"Hao Chen","avatar":"/static/images/avatar.jpg","occupation":"MegaEase Inc. Founder","company":"MegaEase Inc.","email":"haoel@hotmail.com","twitter":"https://twitter.com/haoel","linkedin":"https://www.linkedin.com/in/haoel","github":"https://github.com/haoel","date":null}],"prev":{"title":"Go编程模式：Map-Reduce\n","date":"2020-12-26T00:00:00.000Z","draft":false,"tags":["coolshell","golang"],"summary":"在本篇文章中，我们学习一下函数式编程的中非常重要的Map、Reduce、Filter的三种操作，这三种操作可以让我们非常方便灵活地进行一些数据处理——我们的程序中大多数情况下都是在到倒腾数据，尤其对于一些需要统计的业务场景，Map/Reduce/Filter是非常通用的玩法\n","slug":"2020-12-26-854"},"next":{"title":"Go 编程模式：Functional Options\n","date":"2020-12-26T00:00:00.000Z","draft":false,"tags":["coolshell","golang"],"summary":"在本篇文章中，我们来讨论一下Functional Options这个编程模式。这是一个函数式编程的应用案例，编程技巧也很好，是目前在Go语言中最流行的一种编程模式。但是，在我们正式讨论这个模式之前，我们需要先来看看要解决什么样的问题。\n","slug":"2020-12-26-852"}},"__N_SSG":true}