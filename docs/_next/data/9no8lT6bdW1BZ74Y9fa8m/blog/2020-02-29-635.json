{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var o=Object.create;var r=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var c=e=>r(e,\"__esModule\",{value:!0});var v=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),u=(e,a)=>{c(e);for(var i in a)r(e,i,{get:a[i],enumerable:!0})},w=(e,a,i)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let t of m(a))!p.call(e,t)&&t!==\"default\"&&r(e,t,{get:()=>a[t],enumerable:!(i=h(a,t))||i.enumerable});return e},g=e=>w(c(r(e!=null?o(d(e)):{},\"default\",e&&e.__esModule&&\"default\"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var l=v((q,s)=>{s.exports=_jsx_runtime});var E={};u(E,{default:()=>x,frontmatter:()=>f});var n=g(l()),f={title:`Event Sourcing\n`,date:new Date(15829344e5),draft:!1,tags:[\"martinfowler\"],summary:`\\u8FD9\\u4E2A\\u4E0D\\u662F\\u5F88\\u6E05\\u695A\\u3002\\u6B63\\u5728\\u770B https://martinfowler.com/eaaDev/EventSourcing.html \\u521A\\u597D\\u63D0\\u5230 Event Replay\\uFF0CEvent Replay: If we find a past event was incorrect, we can compute the consequences by reversing it and later events and then replaying the new event and later events. (Or indeed by throwing away the application state and replaying all events with the correct event in sequence.) The same technique can handle events received in the wrong sequence - a common problem with systems that communicate with asynchronous messaging.\n`};function y(e={}){let{wrapper:a}=e.components||{};return a?(0,n.jsx)(a,Object.assign({},e,{children:(0,n.jsx)(i,{})})):i();function i(){let t=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",ul:\"ul\",li:\"li\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h2,{id:\"content\",children:[(0,n.jsx)(t.a,{href:\"#content\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(t.span,{className:\"icon icon-link\"})}),\"Content\"]}),(0,n.jsx)(t.p,{children:\"\\u8FD9\\u4E2A\\u4E0D\\u662F\\u5F88\\u6E05\\u695A\\u3002\"}),(0,n.jsxs)(t.p,{children:[\"\\u6B63\\u5728\\u770B \",(0,n.jsx)(t.a,{href:\"https://martinfowler.com/eaaDev/EventSourcing.html\",children:\"https://martinfowler.com/eaaDev/EventSourcing.html\"})]}),(0,n.jsx)(t.p,{children:\"\\u521A\\u597D\\u63D0\\u5230 Event Replay\\uFF0CEvent Replay: If we find a past event was incorrect, we can compute the consequences by reversing it and later events and then replaying the new event and later events. (Or indeed by throwing away the application state and replaying all events with the correct event in sequence.) The same technique can handle events received in the wrong sequence - a common problem with systems that communicate with asynchronous messaging.\"}),(0,n.jsx)(t.p,{children:\"\\u770B\\u5230\\u8FD9\\u91CC\\u65F6\\u4E5F\\u60F3\\u5230 TCP \\u7684\\u8FD9\\u79CD\\u65B9\\u5F0F\\uFF0C\\u5E94\\u8BE5\\u662F\\u53EF\\u4EE5\\u505A\\u5230\\u7684\"}),(0,n.jsxs)(t.h2,{id:\"link-preview\",children:[(0,n.jsx)(t.a,{href:\"#link-preview\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(t.span,{className:\"icon icon-link\"})}),\"Link Preview\"]}),(0,n.jsxs)(t.ul,{children:[(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:\"https://martinfowler.com/eaaDev/EventSourcing.html\",children:\"https://martinfowler.com/eaaDev/EventSourcing.html\"})}),(0,n.jsx)(t.li,{children:\"Event Sourcing\"}),(0,n.jsx)(t.li,{children:\"Capture all changes to an application state as a sequence of events.\"})]})]})}}var x=y;return E;})();\n;return Component;","toc":[{"value":"Content","url":"#content","depth":2},{"value":"Link Preview","url":"#link-preview","depth":2}],"frontMatter":{"readingTime":{"text":"1 min read","minutes":0.98,"time":58800,"words":196},"slug":"2020-02-29-635","fileName":"2020-02-29-635.mdx","title":"Event Sourcing\n","date":"2020-02-29T00:00:00.000Z","draft":false,"tags":["martinfowler"],"summary":"这个不是很清楚。正在看 https://martinfowler.com/eaaDev/EventSourcing.html 刚好提到 Event Replay，Event Replay: If we find a past event was incorrect, we can compute the consequences by reversing it and later events and then replaying the new event and later events. (Or indeed by throwing away the application state and replaying all events with the correct event in sequence.) The same technique can handle events received in the wrong sequence - a common problem with systems that communicate with asynchronous messaging.\n"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.36,"time":21600,"words":72},"slug":["default"],"fileName":"default.md","name":"Hao Chen","avatar":"/static/images/avatar.jpg","occupation":"MegaEase Inc. Founder","company":"MegaEase Inc.","email":"haoel@hotmail.com","twitter":"https://twitter.com/haoel","linkedin":"https://www.linkedin.com/in/haoel","github":"https://github.com/haoel","date":null}],"prev":{"title":"Berkeley DB\n","date":"2020-02-29T00:00:00.000Z","draft":false,"tags":["wikipedia","database"],"summary":"Berkeley DB - 维基百科，自由的百科全书\n","slug":"2020-02-29-636"},"next":{"title":"在Arduino和超低功耗微控制器上用TensorFlow Lite实现机器学习\n","date":"2020-02-29T00:00:00.000Z","draft":false,"tags":["ml"],"summary":"在Arduino和超低功耗微控制器上用TensorFlow Lite实现机器学习 https://tinymlbook.com/\n","slug":"2020-02-29-634"}},"__N_SSG":true}