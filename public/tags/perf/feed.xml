
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>程序员资源分享网站</title>
      <link>https://goto-share.github.io/blog</link>
      <description>内容来自耗子维护的 Telegram 程序员资源分享群, 本群主要是技术资源分享，包括：技术资料、资源、工具、心得、热点等
为了让交流更多效率：1）鼓励有价值的内容、有深度的思考; 2）鼓励友善、互相帮助、努力学习的氛围；3）不要做伸手党、盗版党、破解党；4）提问前先看看《提问的智慧》； 5) 适当聊天讨论翻墙，千万不要灌水； 6）禁止开车、广告和商业推广； 7）禁止任何仇恨、煽动、歧视的言论； 8）禁止有政治、宗教、性别攻击倾向的言论； 9）禁止低级趣味下流庸俗的内容
  </description>
      <language>en-us</language>
      <managingEditor>dylanninin@gmail.com (程序员资源分享网站)</managingEditor>
      <webMaster>dylanninin@gmail.com (程序员资源分享网站)</webMaster>
      <lastBuildDate>Sat, 10 Dec 2022 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://goto-share.github.io/tags/perf/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://goto-share.github.io/blog/2022-12-10-924</guid>
    <title>eBPF 介绍
</title>
    <link>https://goto-share.github.io/blog/2022-12-10-924</link>
    <description>很早前就想写一篇关于eBPF的文章，但是迟迟没有动手，这两天有点时间，所以就来写一篇，这文章主要还是简单的介绍eBPF 是用来干什么的，并通过几个示例来介绍是怎么玩的，这个技术非常非常之强，Linux 操作系统的观测性实在是太强大了，并在 BCC 加持下变得一览无余。这个技术不是一般的运维人员或是系统管理员可以驾驭的，这个还是要有底层系统知识并有一定开发能力的技术人员才能驾驭的了的。我在这篇文章的最后给了个彩蛋。
</description>
    <pubDate>Sat, 10 Dec 2022 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>coolshell</category><category>tool</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2021-01-14-861</guid>
    <title>Timing web requests with cURL and Chrome
</title>
    <link>https://goto-share.github.io/blog/2021-01-14-861</link>
    <description>When considering website performance, the term TTFB - time to first byte - crops up regularly. Often we see measurements from cURL and Chrome, and this article will show what timings those tools can produce, including time to first byte...
</description>
    <pubDate>Thu, 14 Jan 2021 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category><category>chrome</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-03-07-680</guid>
    <title>When Bloom filters don&#39;t bloom
</title>
    <link>https://goto-share.github.io/blog/2020-03-07-680</link>
    <description>https://blog.cloudflare.com/when-bloom-filters-dont-bloom/   正好配合群主最近关于cache的blog，看看缓存如何影响程序性能
</description>
    <pubDate>Sat, 07 Mar 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>algorithm</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-02-29-622</guid>
    <title>Memory Bandwidth Napkin Math
</title>
    <link>https://goto-share.github.io/blog/2020-02-29-622</link>
    <description>想了解内存访问性能的
</description>
    <pubDate>Sat, 29 Feb 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category><category>cpp</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-02-29-651</guid>
    <title>integer 和 floating point performance
</title>
    <link>https://goto-share.github.io/blog/2020-02-29-651</link>
    <description>哪位大佬知道 integer performance 和 floating point performance　分别指的是什么概念？
</description>
    <pubDate>Sat, 29 Feb 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-02-14-572</guid>
    <title>使用AWS Lambda提高网站图片加载速度1X倍
</title>
    <link>https://goto-share.github.io/blog/2020-02-14-572</link>
    <description>网站流量中大头是图片资源，如何减少图片大小是很重要的事情。本文分享了使用AWS Lambda@Edge无服务架构通过判断浏览器UA自动转换CDN缓存的图片为Webp，将网站图片加载速度提高了1X倍以上
</description>
    <pubDate>Fri, 14 Feb 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>aws</category><category>web</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-02-04-497</guid>
    <title>SSR Speed
</title>
    <link>https://goto-share.github.io/blog/2020-02-04-497</link>
    <description>SSRSpeed / SSRSpeed Docker
</description>
    <pubDate>Tue, 04 Feb 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-02-04-526</guid>
    <title>lazysizes: High performance and SEO friendly lazy loader
</title>
    <link>https://goto-share.github.io/blog/2020-02-04-526</link>
    <description>用 https://github.com/aFarkas/lazysizes  把英语轻松读文章里面涉及到的图片都做了lazyloading，预期又可以大大提高打开效率，有兴趣的用户可以测试一下，欢迎反馈 https://tiny4.org/enreader
</description>
    <pubDate>Tue, 04 Feb 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>github</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-01-14-435</guid>
    <title>Caching challenges and strategies
</title>
    <link>https://goto-share.github.io/blog/2020-01-14-435</link>
    <description>Caching challenges and strategies
</description>
    <pubDate>Tue, 14 Jan 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-01-14-450</guid>
    <title>Speeding up my ZSH load time
</title>
    <link>https://goto-share.github.io/blog/2020-01-14-450</link>
    <description>This is the story on how I speed up my terminal load time. Some time ago I shared my dotfiles to the world. I was never really happy with the shell load time, t
</description>
    <pubDate>Tue, 14 Jan 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>linux</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-01-04-392</guid>
    <title>Efficient data transfer through zero copy
</title>
    <link>https://goto-share.github.io/blog/2020-01-04-392</link>
    <description>Efficient data transfer through zero copy
</description>
    <pubDate>Sat, 04 Jan 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-01-04-394</guid>
    <title>Zero-copy with and without Scatter/Gather operations
</title>
    <link>https://goto-share.github.io/blog/2020-01-04-394</link>
    <description>其中最后的scatter-gather I/O为什么能够避免拷贝 https://stackoverflow.com/questions/9770125/zero-copy-with-and-without-scatter-gather-operations
</description>
    <pubDate>Sat, 04 Jan 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>stackoverflow</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2020-01-04-402</guid>
    <title>Performance testing HTTP/1.1 vs HTTP/2 vs HTTP/2 + Server Push for REST APIs
</title>
    <link>https://goto-share.github.io/blog/2020-01-04-402</link>
    <description>When building web services, a common wisdom is to try to reduce the number of HTTP requests to improve performance. There are a variety of benefits to this, including less total bytes being sent, but the...
</description>
    <pubDate>Sat, 04 Jan 2020 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category><category>web</category><category>http</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2019-12-09-202</guid>
    <title>My learnings on Linux BPF container performance engineering
</title>
    <link>https://goto-share.github.io/blog/2019-12-09-202</link>
    <description>Starting with DockerOver the past few years I’ve worked a lot with container workloads. It all starts with a need to run containers whether its a batch job, a microservice or some scripts. Learning about...
</description>
    <pubDate>Mon, 09 Dec 2019 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>medium</category><category>linux</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2019-12-05-173</guid>
    <title>为什么下面程序递归计算斐波那契数列java比c++要快
</title>
    <link>https://goto-share.github.io/blog/2019-12-05-173</link>
    <description>前面已有的回答一个都没答到点上啊。（就跟其他答主提到的一样，题主的电脑似乎有点慢…）其实这个例子反映出来的跟Java与C++语言上的差异没有任何关系，只是反映出了在这个特定例子上某个编译器（及JIT编译器）的优化的差异。本文后面用到的编译器生成的代码的样子我都记录下来放在这个传送门了
</description>
    <pubDate>Thu, 05 Dec 2019 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>java</category><category>cpp</category><category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2019-11-28-96</guid>
    <title>BPF Performance Tools
</title>
    <link>https://goto-share.github.io/blog/2019-11-28-96</link>
    <description>BPF and related observability tools give software professionals unprecedented visibility into software, helping them analyze operating system and application performance, troubleshoot code, and strengthen security. BPF Performance Tools: Linux System and Application Observability is the industry&#39;s most comprehensive guide to using these tools for observability.
</description>
    <pubDate>Thu, 28 Nov 2019 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category>
  </item>

  <item>
    <guid>https://goto-share.github.io/blog/2019-11-27-66</guid>
    <title>使用UUID性能问题值得注意
</title>
    <link>https://goto-share.github.io/blog/2019-11-27-66</link>
    <description>使用UUID性能问题值得注意
</description>
    <pubDate>Wed, 27 Nov 2019 00:00:00 GMT</pubDate>
    <author>程序员资源分享网站 (@haoel)</author>
    <category>perf</category>
  </item>

    </channel>
  </rss>
