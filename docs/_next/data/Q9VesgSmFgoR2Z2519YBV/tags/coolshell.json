{"pageProps":{"posts":[{"title":"是微服务架构不香还是云不香？\n","date":"2023-05-08T00:00:00.000Z","draft":false,"tags":["coolshell"],"summary":"这两天技术圈头条的【Amazon的流媒体平台 Prime Video 从微服架构到单体架构”】我以为 Prime Video 遇到不是技术问题，而是AWS  Step Function处理能力不足，而且收费很贵的问题。如果 可以无限扩展且白菜价，那么他们还会有动力改成单体吗？会不会反过来吹爆 Serverless？\n","slug":"2023-05-08-932"},{"title":"我看ChatGPT: 为啥谷歌掉了千亿美金\n","date":"2023-02-12T00:00:00.000Z","draft":false,"tags":["coolshell","chatgpt"],"summary":"这几天好些人来问我对 ChatGPT 的看法，正好周末有时间，写了这篇关于 ChatGPT 的文章。这篇文章主要是讨论了一下，基于“内容生成套路”，而不是基于正确和有价值的内容的ChatGPT，和基于正确和有价值，但不生成内容的搜索引擎连姻，会产生出什么样的化学反应？\n","slug":"2023-02-12-926"},{"title":"聊聊 nostr 和 审查\n","date":"2023-02-03T00:00:00.000Z","draft":false,"tags":["coolshell","security"],"summary":"本文包括 nostr协议简介，如何对抗审查，如何对抗Spam和骗子，以及我对审查的理解和看法。\n","slug":"2023-02-03-925"},{"title":"eBPF 介绍\n","date":"2022-12-10T00:00:00.000Z","draft":false,"tags":["coolshell","eBPF"],"summary":"很早前就想写一篇关于eBPF的文章，但是迟迟没有动手，这两天有点时间，所以就来写一篇，这文章主要还是简单的介绍eBPF 是用来干什么的，并通过几个示例来介绍是怎么玩的，这个技术非常非常之强，Linux 操作系统的观测性实在是太强大了，并在 BCC 加持下变得一览无余。这个技术不是一般的运维人员或是系统管理员可以驾驭的，这个还是要有底层系统知识并有一定开发能力的技术人员才能驾驭的了的。我在这篇文章的最后给了个彩蛋。\n","slug":"2022-12-10-924"},{"title":"从一次经历谈 TIME_WAIT 的那些事\n","date":"2022-07-19T00:00:00.000Z","draft":false,"tags":["coolshell","tcp"],"summary":"今天来讲一讲TCP 的 TIME_WAIT 的问题。这个问题尽人皆知，不过，这次遇到的是不太一样的场景，前两天也解决了，正好写篇文章，顺便把 TIME_WAIT 的那些事都说一说。对了，这个场景，跟我开源的探活小工具 EaseProbe 有关，我先说说这个场景里的问题，然后，顺着这个场景跟大家好好说一下这个事\n","slug":"2022-07-19-917"},{"title":"ETCD的内存问题\n","date":"2022-05-05T00:00:00.000Z","draft":false,"tags":["coolshell","etcd"],"summary":"今天跟大家分享一个etcd的内存大量占用的问题，这是前段时间在我们开源软件Easegress中遇到的问题，问题是比较简单的，但是我还想把前因后果说一下，包括，为什么要用etcd，使用etcd的用户场景，包括etcd的一些导致内存占用比较大的设计，以及最后一些建议。希望这篇文章不仅仅只是让你看到了一个简单的内存问题，还能让你有更多的收获。当然，也欢迎您关注我们的开源软件，给我们一些鼓励\n","slug":"2022-05-05-914"},{"title":"一把梭：REST API 全用 POST\n","date":"2022-02-13T00:00:00.000Z","draft":false,"tags":["coolshell","restful","http"],"summary":"还是写篇文章讨论一下这个事。文章包括如下部分: - 为什么要用不同的HTTP动词？- REST API进行复杂查询 - 几个主要问题的回应\n","slug":"2022-02-13-905"},{"title":"网络数字身份认证术\n","date":"2022-01-07T00:00:00.000Z","draft":false,"tags":["coolshell","security"],"summary":"这篇文章是《HTTP API 认证授权术》的姊妹篇，在那篇文章中，主要介绍了 HTTP API 认证和授权技术中用到的 HTTP Basic, Digest Access, HMAC, OAuth, JWT 等各种方式，主要是 API 上用到的一些技术，这篇文章主要想说的是另一个话题——身份认证。也就是说，怎么确认这个数据就是这个人发出来的？\n","slug":"2022-01-07-904"},{"title":"我做架构的一些原则\n","date":"2021-12-21T00:00:00.000Z","draft":false,"tags":["coolshell","architecture"],"summary":"工作 20 年来看到了很多公司的很多的系统架构，相关的经历也越来越多，所以，逐渐形成了自己的逻辑和方法论。写下这篇文章，除了总结个人的经验和想法，供人参考和借鉴。同时，也是针对于现有市面上众多不合理的架构和方案，也作一种“纠正”\n","slug":"2021-12-21-902"},{"title":"源代码特洛伊木马攻击\n","date":"2021-11-19T00:00:00.000Z","draft":false,"tags":["coolshell","security"],"summary":"最近，我们在 Github 的 Code Review 中看到 Github 开始出现下面这个 Warning 信息—— “This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below.”也就是说我们的代码中有一些 bidirectional unicode 的文本，中文直译作 “双向文本”，意思是一些语言是从左到右的，而另一些则是是从右到左的（如：阿拉伯语），如果同一个文件里，即有从左向右的文本也有从右向左文本两种的混搭，那么，就叫bi-direction。术语通常缩写为“ BiDi ”或“ bidi ”。使用双向文本对于中国人来说并不陌生，因为中文又可以从左到右，也可以从右到左，还可以从上到下。\n","slug":"2021-11-19-900"},{"title":"GO编程模式：泛型编程\n","date":"2021-09-04T00:00:00.000Z","draft":false,"tags":["coolshell","golang"],"summary":"Go语言的1.17版本发布了，其中开始正式支持泛型了。虽然还有一些限制（比如，不能把泛型函数export），但是，可以体验了。我的这个《Go编程模式》的系列终于有了真正的泛型编程了，再也不需要使用反射或是go generation这些难用的技术了。周末的时候，我把Go 1.17下载下来，然后，体验了一下泛型编程，还是很不错的。下面，就让我们来看一下Go的泛型编程\n","slug":"2021-09-04-885"},{"title":"如何做一个有质量的技术分享\n","date":"2021-07-13T00:00:00.000Z","draft":false,"tags":["coolshell","talk"],"summary":"分享信息并不难，大多数人都能做到，就算是不善言谈性格内向的技术人员，通过博客或社交媒体，或是不正式的交流，他们都能或多或少的做到。但是如果你想要做一个有质量有高度的分享，这个就难了，所谓的有质量和有高度，我心里面的定义有两点：1）分享内容的保鲜期是很长的，2）会被大范围的传递。我们团队内每周都在做技术分享，虽然分享的主题都很有价值，但是分享的质量参差不齐，所以，想写下这篇文章 。供大家参考\n","slug":"2021-07-13-882"}],"tag":"coolshell"},"__N_SSG":true}