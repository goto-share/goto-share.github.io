
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>程序员资源分享网站</title>
      <link>https://goto-share.github.io/blog</link>
      <description>内容来自耗子维护的 Telegram 程序员资源分享群, 本群主要是技术资源分享，包括：技术资料、资源、工具、心得、热点等
为了让交流更多效率：1）鼓励有价值的内容、有深度的思考; 2）鼓励友善、互相帮助、努力学习的氛围；3）不要做伸手党、盗版党、破解党；4）提问前先看看《提问的智慧》； 5) 适当聊天讨论翻墙，千万不要灌水； 6）禁止开车、广告和商业推广； 7）禁止任何仇恨、煽动、歧视的言论； 8）禁止有政治、宗教、性别攻击倾向的言论； 9）禁止低级趣味下流庸俗的内容
  </description>
      <language>en-us</language>
      <managingEditor>dylanninin@gmail.com (@haoel)</managingEditor>
      <webMaster>dylanninin@gmail.com (@haoel)</webMaster>
      <lastBuildDate>Sat, 10 Dec 2022 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://goto-share.github.io/tags/ebpf/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://goto-share.github.io/blog/2022-12-10-924</guid>
    <title>eBPF 介绍
</title>
    <link>https://goto-share.github.io/blog/2022-12-10-924</link>
    <description>很早前就想写一篇关于eBPF的文章，但是迟迟没有动手，这两天有点时间，所以就来写一篇，这文章主要还是简单的介绍eBPF 是用来干什么的，并通过几个示例来介绍是怎么玩的，这个技术非常非常之强，Linux 操作系统的观测性实在是太强大了，并在 BCC 加持下变得一览无余。这个技术不是一般的运维人员或是系统管理员可以驾驭的，这个还是要有底层系统知识并有一定开发能力的技术人员才能驾驭的了的。我在这篇文章的最后给了个彩蛋。
</description>
    <pubDate>Sat, 10 Dec 2022 00:00:00 GMT</pubDate>
    <author>dylanninin@gmail.com (@haoel)</author>
    <category>coolshell</category><category>eBPF</category>
  </item>

    </channel>
  </rss>
